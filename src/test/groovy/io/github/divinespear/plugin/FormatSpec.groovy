package io.github.divinespear.plugin

import spock.lang.Specification

import static io.github.divinespear.plugin.JpaSchemaGenerationOutputFormatter.formatLine

class FormatSpec extends Specification {

  static final String LINE_SEPARATOR = System.properties["line.separator"] ?: "\n"

  def 'should format create table'() {
    setup:
    def source
    def expected

    when: "create table"
    source = "CREATE TABLE SYSTEM_CURRENCY_RATE_HISTORY (CREATED_DATE DATETIME NULL,LAST_MODIFIED_DATE DATETIME NULL,RATE NUMERIC(28) NULL,VERSION NUMERIC(19) NOT NULL,REFERENCE_ID VARCHAR(255) NOT NULL,CREATED_BY VARCHAR(36) NULL,LAST_MODIFIED_BY VARCHAR(36) NULL,PRIMARY KEY (VERSION,REFERENCE_ID));"
    expected = """CREATE TABLE SYSTEM_CURRENCY_RATE_HISTORY (
\tCREATED_DATE DATETIME NULL,
\tLAST_MODIFIED_DATE DATETIME NULL,
\tRATE NUMERIC(28) NULL,
\tVERSION NUMERIC(19) NOT NULL,
\tREFERENCE_ID VARCHAR(255) NOT NULL,
\tCREATED_BY VARCHAR(36) NULL,
\tLAST_MODIFIED_BY VARCHAR(36) NULL,
\tPRIMARY KEY (VERSION,REFERENCE_ID)
);"""
    then:
    formatLine(source, LINE_SEPARATOR) == expected

    when: "create table with option"
    source = "CREATE TEMPORARY TABLE SYSTEM_CURRENCY_RATE_HISTORY (CREATED_DATE DATETIME NULL,LAST_MODIFIED_DATE DATETIME NULL,RATE NUMERIC(28) NULL,VERSION NUMERIC(19) NOT NULL,REFERENCE_ID VARCHAR(255) NOT NULL,CREATED_BY VARCHAR(36) NULL,LAST_MODIFIED_BY VARCHAR(36) NULL,PRIMARY KEY (VERSION,REFERENCE_ID));"
    expected = """CREATE TEMPORARY TABLE SYSTEM_CURRENCY_RATE_HISTORY (
\tCREATED_DATE DATETIME NULL,
\tLAST_MODIFIED_DATE DATETIME NULL,
\tRATE NUMERIC(28) NULL,
\tVERSION NUMERIC(19) NOT NULL,
\tREFERENCE_ID VARCHAR(255) NOT NULL,
\tCREATED_BY VARCHAR(36) NULL,
\tLAST_MODIFIED_BY VARCHAR(36) NULL,
\tPRIMARY KEY (VERSION,REFERENCE_ID)
);"""
    then:
    formatLine(source, LINE_SEPARATOR) == expected
  }

  def 'should format create index'() {
    setup:
    def source
    def expected

    when: "create index"
    source = "CREATE INDEX INDEX_USER_ACCOUNT_ENABLED_DELETED ON USER_ACCOUNT (ENABLED,DELETED);"
    expected = """CREATE INDEX INDEX_USER_ACCOUNT_ENABLED_DELETED
\tON USER_ACCOUNT (ENABLED,DELETED);"""
    then:
    formatLine(source, LINE_SEPARATOR) == expected

    when: "create index with option"
    source = "CREATE UNIQUE INDEX INDEX_USER_ACCOUNT_ENABLED_DELETED ON USER_ACCOUNT (ENABLED,DELETED);"
    expected = """CREATE UNIQUE INDEX INDEX_USER_ACCOUNT_ENABLED_DELETED
\tON USER_ACCOUNT (ENABLED,DELETED);"""
    then:
    formatLine(source, LINE_SEPARATOR) == expected

    when: "given illegal syntax (issue #9)"
    source = "CREATE INDEX INDEX_SYSTEM_CURRENCY_RATE_VERSION DESC ON SYSTEM_CURRENCY_RATE (VERSION DESC);"
    expected = """CREATE INDEX INDEX_SYSTEM_CURRENCY_RATE_VERSION
\tON SYSTEM_CURRENCY_RATE (VERSION DESC);"""
    then:
    formatLine(source, LINE_SEPARATOR) == expected
  }
}
